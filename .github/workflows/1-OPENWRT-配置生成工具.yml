#============================================================================================
# https://github.com/P3TERX/Actions-OpenWrt
# https://github.com/ophub/amlogic-s9xxx-openwrt
# https://github.com/3wlh/Actions-OpenWrt
# Description: Build OpenWrt
#============================================================================================

name: 1.OpenWrt-配置生成工具

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "请选择OPENWRT的分支"
        required: false
        default: "openwrt-main"
        type: choice
        options:
          - openwrt-main
          - lede-master
          - immortalwrt-master
          - Lienol-master
          
      BRANCH:
        description: "请选择OPENWRT的分支版本"
        required: false
        default: "master"
        type: choice
        options:
          - master
          - main
          - 23.05
          - 22.03
          - 21.02
          - 19.07         
      ssh:
        description: "SSH定制固件配置"
        required: false
        default: true
        type: boolean
     

env:
  # FEEDS_CONF: feeds/${{ inputs.source_branch }}/feeds.conf.default
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  UPLOAD_CONFIG: true

  
  
jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: 查看
      uses: actions/checkout@main

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
       
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap* aspnetcore*
        [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo -E apt update
        sudo -E apt -y install $(curl -fsSL https://is.gd/depend_ubuntu_2204_openwrt)
        sudo -E apt -y autoremove --purge
        sudo -E systemctl daemon-reload
        sudo -E apt clean && sudo -E apt autoclean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /mnt/workdir
        sudo chown $USER:$GROUPS /mnt/workdir

        
       # docker rmi $(docker images -q) 2>/dev/null
       # [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
       # sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL 2>/dev/null
        # sudo docker image prune --all --force
       # sudo -E apt-get -qq -y update
       # sudo -E apt-get -qq -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        # sudo -E apt-get -qq -y install $(cat make-openwrt-env)
       # sudo -E apt -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
       # sudo -E apt-get -qq -y autoremove --purge
       # sudo -E apt-get -qq -y clean
       # sudo rm -rf ~/{.cargo,.dotnet,.rustup}
       # sudo timedatectl set-timezone "${TZ}"
       # sudo mkdir -p /builder
       # sudo chown $USER:$GROUPS /builder

    - name: 克隆源代码 [ ${{ inputs.source_branch }} ]
      working-directory: /mnt/workdir
      run: |
        df -hT $PWD
        # Set up compilation source code
        if [[ "${{ inputs.source_branch }}" == *"openwrt"* ]]; then
            REPO_URL="https://github.com/openwrt/openwrt"
            #REPO_BRANCH="main"
            REPO_BRANCH="${{ inputs.source_branch }}"
            TAGS_NAME="OpenWrt"
        elif [[ "${{ inputs.source_branch }}" == *"lede"* ]]; then
            REPO_URL="https://github.com/kygsmsc/lede2"
            #REPO_BRANCH="master"
            REPO_BRANCH="${{ inputs.source_branch }}"
            TAGS_NAME="LEDE"
        elif [[ "${{ inputs.source_branch }}" == *"immortalwrt"* ]]; then
            REPO_URL="https://github.com/immortalwrt/immortalwrt"
            #REPO_BRANCH="master"
            REPO_BRANCH="${{ inputs.source_branch }}"
            TAGS_NAME="Immortalwrt"
        elif [[ "${{ inputs.source_branch }}" == *"Lienol"* ]]; then
            REPO_URL="https://github.com/Lienol/openwrt"
            #REPO_BRANCH="22.03"
            REPO_BRANCH="${{ inputs.source_branch }}"
            TAGS_NAME="Lienol"
        else
            echo "未知的源代码存储库."
              exit 1
          fi
        # Clone source code
        git clone -q --single-branch --depth=1 --branch=${REPO_BRANCH} ${REPO_URL} openwrt
        ln -sf /mnt/workdir/openwrt $GITHUB_WORKSPACE/openwrt
        echo "FILE_NAME=${TAGS_NAME}_" >> $GITHUB_ENV
        echo "REPO_URL=${REPO_URL}" >> ${GITHUB_OUTPUT}
        echo "TAGS_NAME=${TAGS_NAME}" >> ${GITHUB_OUTPUT}
        echo "status=success" >> ${GITHUB_OUTPUT}
        
    - name: 加载自定义提要
      run: |
        rm -rf tmp
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新 feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装 feeds
      run: cd openwrt && ./scripts/feeds install -a

    #- name: 再次更新 feeds
     # run: cd openwrt && ./scripts/feeds update -i -f

    #- name: 再次安装 feeds
     # run: cd openwrt && ./scripts/feeds install -a -f
      
    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        
    - name: SSH连接 (cd openwrt && make menuconfig )
      if: (inputs.ssh == true) || contains(github.event.action, 'ssh')
      uses: rdp-studio/ssh2actions@main
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    - name: 下载配置
      id: config
      run: |
        cd openwrt
        make defconfig
        echo -e "$(cat .config)"
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
      
    - name: 整理文件
      id: files
      run: |
        cd openwrt
        [[ -d "Output" ]] || mkdir Output
        cp -f .config Output/config
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 检查空间使用情况
      if: (!cancelled())
      run: df -hT

    - name: 上传配置目录
      uses: actions/upload-artifact@main
      if: env.UPLOAD_CONFIG == 'true' && !cancelled()
      with:
        name: ${{ env.FILE_NAME }}Config${{ env.FILE_DATE }}
        path: openwrt/Output
